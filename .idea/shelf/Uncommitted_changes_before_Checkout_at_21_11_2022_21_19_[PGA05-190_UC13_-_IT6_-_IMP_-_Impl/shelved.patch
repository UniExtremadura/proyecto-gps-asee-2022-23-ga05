Index: app/src/main/java/es/unex/dinopedia/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.dinopedia;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Parcelable;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport com.google.gson.Gson;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStreamReader;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport es.unex.dinopedia.databinding.ActivityMainBinding;\r\nimport es.unex.dinopedia.roomdb.DinosaurioDatabase;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    ActivityMainBinding binding;\r\n    FragmentManager fragmentManager = getSupportFragmentManager();\r\n    DinosaurioAdapter mAdapter = new DinosaurioAdapter(MainActivity.this, new DinosaurioAdapter.OnItemClickListener() {\r\n        @Override public void onItemClick(Dinosaurio item) {\r\n            //Snackbar.make(view, \"Item \"+item.getName()+\" Clicked\", Snackbar.LENGTH_LONG).show();\r\n        }\r\n    });\r\n    List<Dinosaurio> dino = new ArrayList<>();\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Button bEnciclopedia = findViewById(R.id.bEnciclopedia);\r\n        Button bCombate = findViewById(R.id.bCombate);\r\n\r\n        bCombate.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivity.this, CombateActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        bEnciclopedia.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(MainActivity.this, EnciclopediaActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n        AppExecutors.getInstance().diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                //DinosaurioDatabase.getInstance(MainActivity.this).getDao().deleteAll();\r\n\r\n\r\n                if (DinosaurioDatabase.getInstance(MainActivity.this).getDao().count() == 0) {\r\n                    BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(getResources().openRawResource(R.raw.jurassicpark)));\r\n                    String receiveString = \"\";\r\n                    StringBuilder stringBuilder = new StringBuilder();\r\n\r\n                    while (true) {\r\n                        try {\r\n                            if (!((receiveString = bufferedReader.readLine()) != null)) break;\r\n                        } catch (IOException e) {\r\n                            e.printStackTrace();\r\n                        }\r\n                        stringBuilder.append(\"\\n\").append(receiveString);\r\n                    }\r\n\r\n                    String read = stringBuilder.toString();\r\n\r\n                    List<Dinosaurio> dino = Arrays.asList(new Gson().fromJson(read, Dinosaurio[].class));\r\n                    for (int i = 0; i < dino.size(); i++) {\r\n                        Dinosaurio d = dino.get(i);\r\n                        DinosaurioDatabase.getInstance(MainActivity.this).getDao().insert(d);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        AppExecutors.getInstance().diskIO().execute(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                DinosaurioDatabase database = DinosaurioDatabase.getInstance(MainActivity.this);\r\n                dino = database.getDao().getAll();\r\n                if(dino.size()!=0){\r\n                    AppExecutors.getInstance().mainThread().execute(()->mAdapter.load(dino));\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/MainActivity.java b/app/src/main/java/es/unex/dinopedia/MainActivity.java
--- a/app/src/main/java/es/unex/dinopedia/MainActivity.java	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
+++ b/app/src/main/java/es/unex/dinopedia/MainActivity.java	(date 1669061942396)
@@ -33,29 +33,12 @@
         }
     });
     List<Dinosaurio> dino = new ArrayList<>();
+
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-        Button bEnciclopedia = findViewById(R.id.bEnciclopedia);
-        Button bCombate = findViewById(R.id.bCombate);
-
-        bCombate.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                Intent intent = new Intent(MainActivity.this, CombateActivity.class);
-                startActivity(intent);
-            }
-        });
-
-        bEnciclopedia.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View view) {
-                Intent intent = new Intent(MainActivity.this, EnciclopediaActivity.class);
-                startActivity(intent);
-            }
-        });
-
 
         AppExecutors.getInstance().diskIO().execute(new Runnable() {
             @Override
@@ -99,5 +82,44 @@
             }
         });
 
+        binding = ActivityMainBinding.inflate(getLayoutInflater());
+        setContentView(binding.getRoot());
+
+        MainFragment mF = new MainFragment(MainActivity.this, binding);
+        replaceFragment(mF);
+
+        EnciclopediaFragment eF = new EnciclopediaFragment(MainActivity.this);
+        FavoritoFragment fF = new FavoritoFragment(MainActivity.this);
+
+        binding.bottomNavigationView.setOnItemSelectedListener(item -> {
+            switch (item.getItemId()){
+                case R.id.principal:
+                    replaceFragment(mF);
+                    break;
+                case R.id.enciclopedia:
+                    replaceFragment(eF);
+                    break;
+                case R.id.batalla:
+                    replaceFragment(new CombateFragment());
+                    break;
+                case R.id.favorito:
+                    replaceFragment(fF);
+                    break;
+                case R.id.logros:
+                    replaceFragment(new AlbumFragment());
+                    break;
+            }
+            return true;
+        });
+
+
     }
+
+    private void replaceFragment(Fragment fragment){
+        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();
+        fragmentTransaction.replace(R.id.frameLayout, fragment);
+        fragmentTransaction.commit();
+    }
+
+
 }
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/roomdb/LogroDatabase.java
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/roomdb/LogroDatabase.java b/app/src/main/java/es/unex/dinopedia/roomdb/LogroDatabase.java
deleted file mode 100644
--- a/app/src/main/java/es/unex/dinopedia/roomdb/LogroDatabase.java	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
+++ /dev/null	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
@@ -1,23 +0,0 @@
-package es.unex.dinopedia.roomdb;
-
-import android.content.Context;
-
-import androidx.room.Database;
-import androidx.room.Room;
-import androidx.room.RoomDatabase;
-
-import es.unex.dinopedia.Logro;
-
-@Database(entities = {Logro.class}, version  =1)
-public abstract class LogroDatabase extends RoomDatabase {
-    private static LogroDatabase instance;
-
-    public static LogroDatabase getInstance(Context context) {
-        if (instance == null){
-            instance = Room.databaseBuilder(context, LogroDatabase.class, "Logro.db").build();
-        }
-        return instance;
-    }
-
-    public abstract LogroDao getDao();
-}
Index: app/src/main/java/es/unex/dinopedia/LogroManagerActivity.java
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/LogroManagerActivity.java b/app/src/main/java/es/unex/dinopedia/LogroManagerActivity.java
deleted file mode 100644
--- a/app/src/main/java/es/unex/dinopedia/LogroManagerActivity.java	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
+++ /dev/null	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
@@ -1,194 +0,0 @@
-package es.unex.dinopedia;
-
-import android.os.Bundle;
-import android.util.Log;
-import android.view.Menu;
-
-import android.view.View;
-
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.appcompat.widget.Toolbar;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-import com.google.android.material.snackbar.Snackbar;
-
-
-
-
-
-public class LogroManagerActivity extends AppCompatActivity {
-
-    // Add a ToDoItem Request Code
-    private static final int ADD_TODO_ITEM_REQUEST = 0;
-
-    private static final String TAG = "Lab-UserInterface";
-
-    // IDs for menu items
-    private static final int MENU_DELETE = Menu.FIRST;
-    private static final int MENU_DUMP = Menu.FIRST + 1;
-
-    private RecyclerView mRecyclerView;
-    private RecyclerView.LayoutManager mLayoutManager;
-    private LogroAdapter mAdapter;
-
-    @Override
-    protected void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        setContentView(R.layout.activity_to_do_manager);
-        Toolbar toolbar = findViewById(R.id.toolbar);
-        setSupportActionBar(toolbar);
-
-        // - Get a reference to the RecyclerView
-        mRecyclerView = findViewById(R.id.my_recycler_view);
-
-        // use this setting to improve performance if you know that changes
-        // in content do not change the layout size of the RecyclerView
-        mRecyclerView.setHasFixedSize(true);
-
-        // use a linear layout manager
-        // - Set a Linear Layout Manager to the RecyclerView
-        mLayoutManager = new LinearLayoutManager(this);
-        mRecyclerView.setLayoutManager(mLayoutManager);
-
-        // - Create a new Adapter for the RecyclerView
-        // specify an adapter (see also next example)
-        View view = findViewById(android.R.id.content);
-        mAdapter = new LogroAdapter(this, new LogroAdapter.OnItemClickListener() {
-            @Override public void onItemClick(Logro item) {
-                Snackbar.make(view, "Item "+item.getName()+" Clicked", Snackbar.LENGTH_LONG).show();
-            }
-        });
-
-        // - Attach the adapter to the RecyclerView
-        mRecyclerView.setAdapter(mAdapter);
-
-        // DinosaurioCRUD crud = DinosaurioCRUD.getInstance(this);
-        //DinosaurioDatabase.getInstance(this);
-    }
-    /*
-    @Override
-    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
-        super.onActivityResult(requestCode,resultCode,data);
-        log("Entered onActivityResult()");
-
-        //  - Check result code and request code.
-        // If user submitted a new ToDoItem
-        // Create a new ToDoItem from the data Intent
-        // and then add it to the adapter
-        if (requestCode == ADD_TODO_ITEM_REQUEST){
-            if (resultCode == RESULT_OK){
-                Dinosaurio item = new Dinosaurio(data);
-
-                //insert into DB
-                DinosaurioCRUD crud = DinosaurioCRUD.getInstance(this);
-                long id = crud.insert(item);
-
-                AppExecutors.getInstance().diskIO().execute(new Runnable() {
-                    @Override
-                    public void run() {
-                        DinosaurioDatabase database = DinosaurioDatabase.getInstance(DinosaurioManagerActivity.this);
-                        long id = database.getDao().insert(item);
-
-                        //update item ID
-                        item.setId(id);
-
-                        //insert into adapter list
-                        runOnUiThread(() -> mAdapter.add(item));
-                    }
-                });
-            }
-        }
-    }
-    */
-    @Override
-    public void onResume() {
-        super.onResume();
-
-        // Load saved ToDoItems, if necessary
-
-        //if (mAdapter.getItemCount() == 0)
-        //    loadItems();
-    }
-
-    @Override
-    protected void onPause() {
-        super.onPause();
-
-        // ALTERNATIVE: Save all ToDoItems
-
-    }
-    /*
-        @Override
-        protected void onDestroy() {
-            DinosaurioCRUD crud = DinosaurioCRUD.getInstance(this);
-            DinosaurioDatabase.getInstance(this).close();
-            crud.close();
-            super.onDestroy();
-        }
-    */
-    @Override
-    public boolean onCreateOptionsMenu(Menu menu) {
-        super.onCreateOptionsMenu(menu);
-
-        menu.add(Menu.NONE, MENU_DELETE, Menu.NONE, "Delete all");
-        menu.add(Menu.NONE, MENU_DUMP, Menu.NONE, "Dump to log");
-        return true;
-    }
-    /*
-        @Override
-        public boolean onOptionsItemSelected(MenuItem item) {
-            switch (item.getItemId()) {
-                case MENU_DELETE:
-                    DinosaurioCRUD crud = DinosaurioCRUD.getInstance(this);
-                    crud.deleteAll();
-                    AppExecutors.getInstance().diskIO().execute(new Runnable() {
-                        @Override
-                        public void run() {
-                            DinosaurioDatabase.getInstance(LogroManagerActivity.this).getDao().deleteAll();
-                           runOnUiThread(() -> mAdapter.clear());
-                        }
-                    });
-    
-                    return true;
-                case MENU_DUMP:
-                    dump();
-                    return true;
-                default:
-                    return super.onOptionsItemSelected(item);
-            }
-        }
-    */
-    private void dump() {
-
-        for (int i = 0; i < mAdapter.getItemCount(); i++) {
-            String data = ((Logro) mAdapter.getItem(i)).toLog();
-            log("Item " + i + ": " + data.replace(Logro.ITEM_SEP, ","));
-        }
-
-    }
-    /*
-        // Load stored Dinosaurios
-        private void loadItems() {
-            DinosaurioCRUD crud = DinosaurioCRUD.getInstance(this);
-            List<Dinosaurio> items = crud.getAll();
-    
-            AppExecutors.getInstance().diskIO().execute(new Runnable() {
-                @Override
-                public void run() {
-                    List<Dinosaurio> items = DinosaurioDatabase.getInstance(LogroManagerActivity.this).getDao().getAll();
-                    runOnUiThread( () -> mAdapter.load(items));
-                }
-            });
-    
-        }
-    */
-    private void log(String msg) {
-        try {
-            Thread.sleep(500);
-        } catch (InterruptedException e) {
-            e.printStackTrace();
-        }
-        Log.i(TAG, msg);
-    }
-}
Index: app/src/main/java/es/unex/dinopedia/LogroAdapter.java
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/LogroAdapter.java b/app/src/main/java/es/unex/dinopedia/LogroAdapter.java
deleted file mode 100644
--- a/app/src/main/java/es/unex/dinopedia/LogroAdapter.java	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
+++ /dev/null	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
@@ -1,111 +0,0 @@
-package es.unex.dinopedia;
-
-import android.content.Context;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-import android.widget.TextView;
-
-import androidx.recyclerview.widget.RecyclerView;
-
-import java.util.ArrayList;
-import java.util.List;
-
-public class LogroAdapter extends RecyclerView.Adapter<LogroAdapter.ViewHolder> {
-    private List<Logro> mItems = new ArrayList<Logro>();
-    Context mContext;
-
-    public interface OnItemClickListener {
-        void onItemClick(Logro item);     //Type of the element to be returned
-    }
-
-    private final OnItemClickListener listener;
-
-    // Provide a suitable constructor (depends on the kind of dataset)
-    public LogroAdapter(Context context, OnItemClickListener listener) {
-        mContext = context;
-        this.listener = listener;
-    }
-
-    // Create new views (invoked by the layout manager)
-    @Override
-    public ViewHolder onCreateViewHolder(ViewGroup parent,
-                                                           int viewType) {
-        // - Inflate the View for every element
-        View v = LayoutInflater.from(parent.getContext())
-                .inflate(R.layout.logro_info, parent, false);
-
-        return new ViewHolder(mContext,v);
-    }
-
-    // Replace the contents of a view (invoked by the layout manager)
-    @Override
-    public void onBindViewHolder(ViewHolder holder, int position) {
-        holder.bind(mItems.get(position),listener);
-    }
-
-    // Return the size of your dataset (invoked by the layout manager)
-    @Override
-    public int getItemCount() {
-
-        return mItems.size();
-    }
-
-    public void add(Logro item) {
-
-        mItems.add(item);
-        notifyDataSetChanged();
-
-    }
-
-    public void clear(){
-
-        mItems.clear();
-        notifyDataSetChanged();
-
-    }
-
-    public void load(List<Logro> items){
-
-        mItems.clear();
-        mItems = items;
-        notifyDataSetChanged();
-
-    }
-
-    public Object getItem(int pos) {
-        return mItems.get(pos);
-    }
-
-     static class ViewHolder extends RecyclerView.ViewHolder {
-
-         private final Context mContext;
-
-        private final TextView nombre;
-
-        public ViewHolder(Context context, View itemView) {
-            super(itemView);
-
-            mContext = context;
-
-            // - Get the references to every widget of the Item View
-
-            nombre =  itemView.findViewById(R.id.tLogro);
-        }
-
-        public void bind(final Logro logro, final OnItemClickListener listener) {
-
-            // - Display Nombre in TextView
-            nombre.setText(logro.getName());
-
-            itemView.setOnClickListener(new View.OnClickListener() {
-
-                @Override
-                public void onClick(View v) {
-                    listener.onItemClick(logro);
-                }
-            });
-        }
-    }
-
-}
Index: app/src/main/java/es/unex/dinopedia/roomdb/LogroDao.java
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/roomdb/LogroDao.java b/app/src/main/java/es/unex/dinopedia/roomdb/LogroDao.java
deleted file mode 100644
--- a/app/src/main/java/es/unex/dinopedia/roomdb/LogroDao.java	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
+++ /dev/null	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
@@ -1,35 +0,0 @@
-package es.unex.dinopedia.roomdb;
-
-import androidx.room.Dao;
-import androidx.room.Insert;
-import androidx.room.Query;
-import androidx.room.Update;
-
-import java.util.List;
-
-import es.unex.dinopedia.Logro;
-
-@Dao
-public interface LogroDao {
-
-    @Query("SELECT * FROM Logro")
-    List<Logro> getAll();
-
-    @Query("SELECT * FROM Logro WHERE name=:titulo")
-    Logro getLogro(String titulo);
-
-    @Insert
-    long insert(Logro item);
-
-    @Query("DELETE FROM Logro")
-    void deleteAll();
-
-    @Update
-    int update(Logro item);
-
-    @Query("SELECT COUNT (id) FROM Logro")
-    int count();
-
-    @Query("SELECT * FROM Logro WHERE checked='1'")
-    List<Logro> getCheck();
-}
Index: app/src/main/java/es/unex/dinopedia/Logro.java
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/Logro.java b/app/src/main/java/es/unex/dinopedia/Logro.java
deleted file mode 100644
--- a/app/src/main/java/es/unex/dinopedia/Logro.java	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
+++ /dev/null	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
@@ -1,101 +0,0 @@
-package es.unex.dinopedia;
-
-import androidx.room.Entity;
-import androidx.room.Ignore;
-import androidx.room.PrimaryKey;
-
-import com.google.gson.annotations.Expose;
-import com.google.gson.annotations.SerializedName;
-
-import java.util.Objects;
-
-@Entity(tableName = "Logro")
-public class Logro {
-
-	@Ignore
-	public static final String ITEM_SEP = System.getProperty("line.separator");
-
-	@SerializedName("id")
-	@Expose
-	@PrimaryKey(autoGenerate = true)
-	private long id;
-	@SerializedName("name")
-	@Expose
-	private String name;
-	@SerializedName("checked")
-	@Expose
-	private String checked;
-
-	/**
-	 * No args constructor for use in serialization
-	 *
-	 */
-	@Ignore
-	public Logro() {
-	}
-
-	/**
-	 *
-	 * @param name
-	 * @param checked
-	 */
-	@Ignore
-	public Logro(String name, String checked) {
-		super();
-		this.name = name;
-		this.checked = checked;
-	}
-
-	public Logro(long id, String name, String checked) {
-		super();
-		this.id = id;
-		this.name = name;
-	}
-
-	public long getId() {
-		return id;
-	}
-
-	public void setId(long id) {
-		this.id = id;
-	}
-
-	public String getName() {
-		return name;
-	}
-
-	public void setName(String name) {
-		this.name = name;
-	}
-
-	public String getChecked() { return checked; }
-
-	public void setChecked(String checked) { this.checked = checked; }
-
-	@Override
-	public String toString() {
-		return "Logro{" +
-				"id=" + id +
-				", name='" + name + '\'' +
-				", checked='" + checked + '\'' +
-				'}';
-	}
-
-	@Override
-	public boolean equals(Object o) {
-		if (this == o) return true;
-		if (o == null || getClass() != o.getClass()) return false;
-		Logro logro = (Logro) o;
-		return id == logro.id && Objects.equals(name, logro.name) && Objects.equals(checked, logro.checked);
-	}
-
-	@Override
-	public int hashCode() {
-		return Objects.hash(id, name, checked);
-	}
-
-	public String toLog() {
-		return "ID: " + id + ITEM_SEP + "Name:" + name + ITEM_SEP + "checked:" + checked;
-	}
-
-}
\ No newline at end of file
Index: app/src/main/res/raw/logros.json
===================================================================
diff --git a/app/src/main/res/raw/logros.json b/app/src/main/res/raw/logros.json
deleted file mode 100644
--- a/app/src/main/res/raw/logros.json	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
+++ /dev/null	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
@@ -1,38 +0,0 @@
-[
-  {
-    "name": "Inicia Sesión en la aplicación",
-    "checked": "0"
-  },
-  {
-    "name": "Realiza tu primer combate con la aplicación",
-    "checked": "0"
-  },
-  {
-    "name": "Marca tu primer dinosaurio favorito",
-    "checked": "0"
-  },
-  {
-    "name": "Primera victoria de un dinosaurio carnívoro en tu aplicación",
-    "checked": "0"
-  },
-  {
-    "name": "Primera victoria de un dinosaurio herbívoro en tu aplicación",
-    "checked": "0"
-  },
-  {
-    "name": "Primera victoria de un dinosaurio omnívoro en tu aplicación",
-    "checked": "0"
-  },
-  {
-    "name": "Primera victoria de un dinosaurio del jurásico en tu aplicación",
-    "checked": "0"
-  },
-  {
-    "name": "Primera victoria de un dinosaurio del cretácico en tu aplicación",
-    "checked": "0"
-  },
-  {
-    "name": "Primera victoria de un dinosaurio del triásico en tu aplicación",
-    "checked": "0"
-  }
-]
\ No newline at end of file
Index: app/src/main/res/layout/logro_info.xml
===================================================================
diff --git a/app/src/main/res/layout/logro_info.xml b/app/src/main/res/layout/logro_info.xml
deleted file mode 100644
--- a/app/src/main/res/layout/logro_info.xml	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
+++ /dev/null	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    android:id="@+id/RelativeLayout1"
-    android:layout_width="match_parent"
-    android:layout_height="wrap_content"
-    android:orientation="vertical" >
-
-    <TextView
-        android:id="@+id/tLogro"
-        android:layout_width="match_parent"
-        android:layout_height="wrap_content"
-        android:layout_alignParentStart="true"
-        android:layout_alignParentTop="true"
-        android:layout_marginStart="0dp"
-        android:layout_marginTop="1dp"
-        android:text="Nombre del Logro"
-        android:textAppearance="?android:attr/textAppearanceLarge"></TextView>
-
-</RelativeLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_combate.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_combate.xml b/app/src/main/res/layout/fragment_combate.xml
new file mode 100644
--- /dev/null	(date 1666880978000)
+++ b/app/src/main/res/layout/fragment_combate.xml	(date 1666880978000)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".CombateFragment">
+
+    <!-- TODO: Update blank fragment layout -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="BELEN" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_album.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_album.xml b/app/src/main/res/layout/fragment_album.xml
new file mode 100644
--- /dev/null	(date 1666880978000)
+++ b/app/src/main/res/layout/fragment_album.xml	(date 1666880978000)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".AlbumFragment">
+
+    <!-- TODO: Update blank fragment layout -->
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:text="HOLA" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/CombateFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/CombateFragment.java b/app/src/main/java/es/unex/dinopedia/CombateFragment.java
new file mode 100644
--- /dev/null	(date 1668727358000)
+++ b/app/src/main/java/es/unex/dinopedia/CombateFragment.java	(date 1668727358000)
@@ -0,0 +1,64 @@
+package es.unex.dinopedia;
+
+import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+/**
+ * A simple {@link Fragment} subclass.
+ * Use the {@link CombateFragment#newInstance} factory method to
+ * create an instance of this fragment.
+ */
+public class CombateFragment extends Fragment {
+
+    // TODO: Rename parameter arguments, choose names that match
+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+    private static final String ARG_PARAM1 = "param1";
+    private static final String ARG_PARAM2 = "param2";
+
+    // TODO: Rename and change types of parameters
+    private String mParam1;
+    private String mParam2;
+
+    public CombateFragment() {
+        // Required empty public constructor
+    }
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameters.
+     *
+     * @param param1 Parameter 1.
+     * @param param2 Parameter 2.
+     * @return A new instance of fragment CombateFragment.
+     */
+    // TODO: Rename and change types and number of parameters
+    public static CombateFragment newInstance(String param1, String param2) {
+        CombateFragment fragment = new CombateFragment();
+        Bundle args = new Bundle();
+        args.putString(ARG_PARAM1, param1);
+        args.putString(ARG_PARAM2, param2);
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        if (getArguments() != null) {
+            mParam1 = getArguments().getString(ARG_PARAM1);
+            mParam2 = getArguments().getString(ARG_PARAM2);
+        }
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        // Inflate the layout for this fragment
+        return null;
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_enciclopedia.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_enciclopedia.xml b/app/src/main/res/layout/fragment_enciclopedia.xml
new file mode 100644
--- /dev/null	(date 1667778816000)
+++ b/app/src/main/res/layout/fragment_enciclopedia.xml	(date 1667778816000)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".EnciclopediaFragment">
+
+    <!-- TODO: Update blank fragment layout -->
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/my_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scrollbars="vertical" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_main.xml b/app/src/main/res/layout/fragment_main.xml
new file mode 100644
--- /dev/null	(date 1668366388000)
+++ b/app/src/main/res/layout/fragment_main.xml	(date 1668366388000)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="275dp"
+        android:layout_height="343dp"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.493"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.0"
+        app:srcCompat="@drawable/__photoroom__1_" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_favorito.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_favorito.xml b/app/src/main/res/layout/fragment_favorito.xml
new file mode 100644
--- /dev/null	(date 1666881298000)
+++ b/app/src/main/res/layout/fragment_favorito.xml	(date 1666881298000)
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <TextView
+        android:id="@+id/textView2"
+        android:layout_width="49dp"
+        android:layout_height="16dp"
+        android:text="Favorito"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/MainFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/MainFragment.java b/app/src/main/java/es/unex/dinopedia/MainFragment.java
new file mode 100644
--- /dev/null	(date 1669061942389)
+++ b/app/src/main/java/es/unex/dinopedia/MainFragment.java	(date 1669061942389)
@@ -0,0 +1,110 @@
+package es.unex.dinopedia;
+
+import static android.app.Activity.RESULT_OK;
+
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentManager;
+import androidx.fragment.app.FragmentResultListener;
+import androidx.fragment.app.FragmentTransaction;
+
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+import android.widget.TextView;
+
+import org.json.JSONArray;
+
+import java.text.DateFormat;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Date;
+import java.util.List;
+import java.util.Random;
+
+import es.unex.dinopedia.databinding.ActivityMainBinding;
+import es.unex.dinopedia.roomdb.DinosaurioDatabase;
+
+/**
+ * A simple {@link Fragment} subclass.
+ * Use the {@link MainFragment#newInstance} factory method to
+ * create an instance of this fragment.
+ */
+public class MainFragment extends Fragment implements View.OnClickListener {
+
+    // TODO: Rename parameter arguments, choose names that match
+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+    private static final String ARG_PARAM1 = "param1";
+    private static final String ARG_PARAM2 = "param2";
+    private View vista;
+    private final Context context;
+    ActivityMainBinding binding;
+    private DinosaurioAdapter mAdapter;
+
+
+    // TODO: Rename and change types of parameters
+    private String mParam1;
+    private String mParam2;
+    private List<Dinosaurio> dinoList;
+    private List<Dinosaurio> copiaDinosaurio;
+
+
+    public MainFragment(Context cont, ActivityMainBinding bind) {
+        context = cont;
+        dinoList=new ArrayList<>();
+        mAdapter = new DinosaurioAdapter(context, new DinosaurioAdapter.OnItemClickListener() {
+            @Override public void onItemClick(Dinosaurio item) {
+                //Snackbar.make(view, "Item "+item.getName()+" Clicked", Snackbar.LENGTH_LONG).show();
+            }
+        });
+    }
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameters.
+     *
+     * @param param1 Parameter 1.
+     * @param param2 Parameter 2.
+     * @return A new instance of fragment MainFragment.
+     */
+    // TODO: Rename and change types and number of parameters
+    public static MainFragment newInstance(String param1, String param2, Context cont, ActivityMainBinding bind) {
+        MainFragment fragment = new MainFragment(cont, bind);
+        Bundle args = new Bundle();
+        args.putString(ARG_PARAM1, param1);
+        args.putString(ARG_PARAM2, param2);
+        fragment.setArguments(args);
+
+        return fragment;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        if (getArguments() != null) {
+            mParam1 = getArguments().getString(ARG_PARAM1);
+            mParam2 = getArguments().getString(ARG_PARAM2);
+        }
+    }
+
+
+    @Override
+    public void onClick(View v) {
+        FragmentTransaction ft = getActivity().getSupportFragmentManager().beginTransaction();
+        //ft.replace(R.id.frame_container, fragment).addToBackStack(null).commit();
+
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View rootView = inflater.inflate(R.layout.fragment_main, container, false);
+        return rootView;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/EnciclopediaFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/EnciclopediaFragment.java b/app/src/main/java/es/unex/dinopedia/EnciclopediaFragment.java
new file mode 100644
--- /dev/null	(date 1668729074000)
+++ b/app/src/main/java/es/unex/dinopedia/EnciclopediaFragment.java	(date 1668729074000)
@@ -0,0 +1,86 @@
+package es.unex.dinopedia;
+
+import android.content.Context;
+import android.os.Bundle;
+
+import androidx.appcompat.widget.Toolbar;
+import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.google.android.material.snackbar.Snackbar;
+
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import es.unex.dinopedia.roomdb.DinosaurioDatabase;
+
+/**
+ * A simple {@link Fragment} subclass.
+ * Use the {@link EnciclopediaFragment#newInstance} factory method to
+ * create an instance of this fragment.
+ */
+public class EnciclopediaFragment extends Fragment {
+
+    // TODO: Rename parameter arguments, choose names that match
+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+    private static final String ARG_PARAM1 = "param1";
+    private static final String ARG_PARAM2 = "param2";
+
+    // TODO: Rename and change types of parameters
+    private String mParam1;
+    private String mParam2;
+
+    private Context context;
+
+
+    public EnciclopediaFragment(){
+    }
+
+    public EnciclopediaFragment(Context cont) {
+        // Required empty public constructor
+        context = cont;
+    }
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameters.
+     *
+     * @param param1 Parameter 1.
+     * @param param2 Parameter 2.
+     * @return A new instance of fragment EnciclopediaFragment.
+     */
+    // TODO: Rename and change types and number of parameters
+    public static EnciclopediaFragment newInstance(String param1, String param2, Context context, List<Dinosaurio> dino) {
+        Bundle args = new Bundle();
+        args.putString(ARG_PARAM1, param1);
+        args.putString(ARG_PARAM2, param2);
+        return null;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        if (getArguments() != null) {
+            mParam1 = getArguments().getString(ARG_PARAM1);
+            mParam2 = getArguments().getString(ARG_PARAM2);
+        }
+
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        return null;
+    }
+
+
+}
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/AlbumFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/AlbumFragment.java b/app/src/main/java/es/unex/dinopedia/AlbumFragment.java
new file mode 100644
--- /dev/null	(date 1668727358000)
+++ b/app/src/main/java/es/unex/dinopedia/AlbumFragment.java	(date 1668727358000)
@@ -0,0 +1,66 @@
+package es.unex.dinopedia;
+
+import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+/**
+ * A simple {@link Fragment} subclass.
+ * Use the {@link AlbumFragment#newInstance} factory method to
+ * create an instance of this fragment.
+ */
+public class AlbumFragment extends Fragment {
+
+    // TODO: Rename parameter arguments, choose names that match
+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+    private static final String ARG_PARAM1 = "param1";
+    private static final String ARG_PARAM2 = "param2";
+
+    // TODO: Rename and change types of parameters
+    private String mParam1;
+    private String mParam2;
+
+    public AlbumFragment() {
+        // Required empty public constructor
+    }
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameters.
+     *
+     * @param param1 Parameter 1.
+     * @param param2 Parameter 2.
+     * @return A new instance of fragment AlbumFragment.
+     */
+    // TODO: Rename and change types and number of parameters
+    public static AlbumFragment newInstance(String param1, String param2) {
+        AlbumFragment fragment = new AlbumFragment();
+        Bundle args = new Bundle();
+        args.putString(ARG_PARAM1, param1);
+        args.putString(ARG_PARAM2, param2);
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+
+        super.onCreate(savedInstanceState);
+        if (getArguments() != null) {
+            mParam1 = getArguments().getString(ARG_PARAM1);
+            mParam2 = getArguments().getString(ARG_PARAM2);
+        }
+    }
+
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+
+        return null;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/FavoritoFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/FavoritoFragment.java b/app/src/main/java/es/unex/dinopedia/FavoritoFragment.java
new file mode 100644
--- /dev/null	(date 1668729216000)
+++ b/app/src/main/java/es/unex/dinopedia/FavoritoFragment.java	(date 1668729216000)
@@ -0,0 +1,68 @@
+package es.unex.dinopedia;
+
+import android.content.Context;
+import android.os.Bundle;
+
+import androidx.fragment.app.Fragment;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+/**
+ * A simple {@link Fragment} subclass.
+ * Use the {@link FavoritoFragment#newInstance} factory method to
+ * create an instance of this fragment.
+ */
+public class FavoritoFragment extends Fragment {
+
+    // TODO: Rename parameter arguments, choose names that match
+    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
+    private static final String ARG_PARAM1 = "param1";
+    private static final String ARG_PARAM2 = "param2";
+
+    // TODO: Rename and change types of parameters
+    private String mParam1;
+    private String mParam2;
+
+    private static  Context context = null;
+
+    public FavoritoFragment(Context cont) {
+        // Required empty public constructor
+        context = cont;
+
+    }
+
+    /**
+     * Use this factory method to create a new instance of
+     * this fragment using the provided parameters.
+     *
+     * @param param1 Parameter 1.
+     * @param param2 Parameter 2.
+     * @return A new instance of fragment FavoritoFragment.
+     */
+    // TODO: Rename and change types and number of parameters
+    public static FavoritoFragment newInstance(String param1, String param2) {
+        FavoritoFragment fragment = new FavoritoFragment(context);
+        Bundle args = new Bundle();
+        args.putString(ARG_PARAM1, param1);
+        args.putString(ARG_PARAM2, param2);
+        fragment.setArguments(args);
+        return fragment;
+    }
+
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        if (getArguments() != null) {
+            mParam1 = getArguments().getString(ARG_PARAM1);
+            mParam2 = getArguments().getString(ARG_PARAM2);
+        }
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        return null;
+    }
+}
\ No newline at end of file
Index: app/src/main/res/menu/bottom_bar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/bottom_bar.xml b/app/src/main/res/menu/bottom_bar.xml
new file mode 100644
--- /dev/null	(date 1666882002000)
+++ b/app/src/main/res/menu/bottom_bar.xml	(date 1666882002000)
@@ -0,0 +1,22 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+
+
+    <item android:title="Principal"
+        android:icon="@drawable/ic_baseline_house_24"
+        android:id="@+id/principal"/>
+    <item android:title="Batalla"
+        android:icon="@drawable/ic_baseline_fort_24"
+        android:id="@+id/batalla" />
+    <item android:title="Enciclopedia"
+        android:icon="@drawable/ic_baseline_menu_book_24"
+        android:id="@+id/enciclopedia" />
+    <item android:title="Favorito"
+        android:icon="@drawable/ic_baseline_favorite_24"
+        android:id="@+id/favorito"/>
+    <item android:title="Logros"
+        android:icon="@drawable/ic_baseline_emoji_events_24"
+        android:id="@+id/logros" />
+
+</menu>
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <TextView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"DinoPedia\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision 86b111fb8e71f6c110a451ac4042dac1245b5dca)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1668728226000)
@@ -6,13 +6,25 @@
     android:layout_height="match_parent"
     tools:context=".MainActivity">
 
-    <TextView
-        android:layout_width="wrap_content"
+    <FrameLayout
+        android:id="@+id/frameLayout"
+        android:layout_width="0dp"
+        android:layout_height="0dp"
+        app:layout_constraintBottom_toTopOf="@+id/bottomNavigationView"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent">
+
+    </FrameLayout>
+
+    <com.google.android.material.bottomnavigation.BottomNavigationView
+        android:id="@+id/bottomNavigationView"
+        android:layout_width="411dp"
         android:layout_height="wrap_content"
-        android:text="DinoPedia"
+        android:layout_marginBottom="1dp"
         app:layout_constraintBottom_toBottomOf="parent"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        app:menu="@menu/bottom_bar"/>
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
