Index: app/src/main/res/layout/fragment_enciclopedia.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".EnciclopediaFragment\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/my_recycler_view\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:scrollbars=\"vertical\" />\r\n\r\n</FrameLayout>
===================================================================
diff --git a/app/src/main/res/layout/fragment_enciclopedia.xml b/app/src/main/res/layout/fragment_enciclopedia.xml
--- a/app/src/main/res/layout/fragment_enciclopedia.xml	
+++ b/app/src/main/res/layout/fragment_enciclopedia.xml	
@@ -1,16 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
-<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
-    tools:context=".EnciclopediaFragment">
-
-    <!-- TODO: Update blank fragment layout -->
-
-    <androidx.recyclerview.widget.RecyclerView
-        android:id="@+id/my_recycler_view"
-        android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:scrollbars="vertical" />
+    android:background="#FFFFFF">
 
-</FrameLayout>
\ No newline at end of file
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <ImageView\r\n        android:id=\"@+id/imageView\"\r\n        android:layout_width=\"275dp\"\r\n        android:layout_height=\"343dp\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.493\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintVertical_bias=\"0.0\"\r\n        app:srcCompat=\"@drawable/__photoroom__1_\" />\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
===================================================================
diff --git a/app/src/main/res/layout/fragment_main.xml b/app/src/main/res/layout/fragment_main.xml
--- a/app/src/main/res/layout/fragment_main.xml	
+++ b/app/src/main/res/layout/fragment_main.xml	
@@ -5,6 +5,17 @@
     android:layout_width="match_parent"
     android:layout_height="match_parent">
 
+    <TextView
+        android:id="@+id/textView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Â¡Dinosaurio del dia!"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:layout_constraintVertical_bias="0.592" />
+
     <ImageView
         android:id="@+id/imageView"
         android:layout_width="275dp"
@@ -17,4 +28,16 @@
         app:layout_constraintVertical_bias="0.0"
         app:srcCompat="@drawable/__photoroom__1_" />
 
+    <TextView
+        android:id="@+id/nombreDino"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="Cargando dinosaurio..."
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.498"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/textView"
+        app:layout_constraintVertical_bias="0.095" />
+
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/MainFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.dinopedia;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentResultListener;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport org.json.JSONArray;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\nimport es.unex.dinopedia.databinding.ActivityMainBinding;\r\nimport es.unex.dinopedia.roomdb.DinosaurioDatabase;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link MainFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class MainFragment extends Fragment implements View.OnClickListener {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n    private View vista;\r\n    private final Context context;\r\n    ActivityMainBinding binding;\r\n    private DinosaurioAdapter mAdapter;\r\n\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n    private List<Dinosaurio> dinoList;\r\n    private List<Dinosaurio> copiaDinosaurio;\r\n\r\n\r\n    public MainFragment(Context cont, ActivityMainBinding bind) {\r\n        context = cont;\r\n        dinoList=new ArrayList<>();\r\n        mAdapter = new DinosaurioAdapter(context, new DinosaurioAdapter.OnItemClickListener() {\r\n            @Override public void onItemClick(Dinosaurio item) {\r\n                //Snackbar.make(view, \"Item \"+item.getName()+\" Clicked\", Snackbar.LENGTH_LONG).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment MainFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static MainFragment newInstance(String param1, String param2, Context cont, ActivityMainBinding bind) {\r\n        MainFragment fragment = new MainFragment(cont, bind);\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        FragmentTransaction ft = getActivity().getSupportFragmentManager().beginTransaction();\r\n        //ft.replace(R.id.frame_container, fragment).addToBackStack(null).commit();\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\r\n        View rootView = inflater.inflate(R.layout.fragment_main, container, false);\r\n        return rootView;\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/MainFragment.java b/app/src/main/java/es/unex/dinopedia/MainFragment.java
--- a/app/src/main/java/es/unex/dinopedia/MainFragment.java	
+++ b/app/src/main/java/es/unex/dinopedia/MainFragment.java	
@@ -1,16 +1,11 @@
 package es.unex.dinopedia;
 
-import static android.app.Activity.RESULT_OK;
-
 import android.content.Context;
 import android.content.Intent;
 import android.os.Bundle;
 
-import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
-import androidx.fragment.app.FragmentManager;
-import androidx.fragment.app.FragmentResultListener;
 import androidx.fragment.app.FragmentTransaction;
 
 import android.util.Log;
@@ -20,8 +15,6 @@
 import android.widget.Button;
 import android.widget.TextView;
 
-import org.json.JSONArray;
-
 import java.text.DateFormat;
 import java.text.SimpleDateFormat;
 import java.util.ArrayList;
@@ -44,10 +37,13 @@
     private static final String ARG_PARAM1 = "param1";
     private static final String ARG_PARAM2 = "param2";
     private View vista;
-    private final Context context;
+    private Context context;
     ActivityMainBinding binding;
     private DinosaurioAdapter mAdapter;
-
+    private DateFormat formatoFecha;
+    private Date fecha;
+    private boolean sesionIniciada;
+    private int dinosaurioDelDia;
 
     // TODO: Rename and change types of parameters
     private String mParam1;
@@ -55,6 +51,8 @@
     private List<Dinosaurio> dinoList;
     private List<Dinosaurio> copiaDinosaurio;
 
+    public MainFragment(){
+    }
 
     public MainFragment(Context cont, ActivityMainBinding bind) {
         context = cont;
@@ -64,6 +62,27 @@
                 //Snackbar.make(view, "Item "+item.getName()+" Clicked", Snackbar.LENGTH_LONG).show();
             }
         });
+        AppExecutors.getInstance().diskIO().execute(new Runnable() {
+            @Override
+            public void run() {
+                DinosaurioDatabase database = DinosaurioDatabase.getInstance(context);
+                dinoList = database.getDao().getAll();
+                AppExecutors.getInstance().mainThread().execute(()->copiaDinosaurio=dinoList);
+            }
+        });
+        formatoFecha = new SimpleDateFormat("dd/MM/yy");
+        long momento = System.currentTimeMillis();
+        fecha = new Date(momento);
+        binding = bind;
+
+        if(copiaDinosaurio!=null) {
+            if (copiaDinosaurio.size() != 0) {
+                Random random_method = new Random();
+                dinosaurioDelDia = random_method.nextInt(copiaDinosaurio.size());
+            } else {
+                dinosaurioDelDia = 0;
+            }
+        }
     }
 
     /**
@@ -94,6 +113,13 @@
         }
     }
 
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState){
+        View rootView = inflater.inflate(R.layout.fragment_main, container, false);
+        vista = rootView;
+
+        return rootView;
+    }
 
     @Override
     public void onClick(View v) {
@@ -102,9 +128,42 @@
 
     }
 
+    public void elegirDinosaurio(){
+        String nombre;
+        Random random_method = new Random();
+        if(copiaDinosaurio!=null) {
+            if (copiaDinosaurio.size() != 0) {
+                int nuevoDinosaurio = random_method.nextInt(copiaDinosaurio.size());
+                long momento = System.currentTimeMillis();
+                Date fechaActual = new Date(momento);
+                String fechaActualS = formatoFecha.format(fechaActual);
+                String fechaS = formatoFecha.format(fecha);
+                if (!fechaS.equals(fechaActualS)) {
+                    fecha = fechaActual;
+                    nuevoDinosaurio = random_method.nextInt(copiaDinosaurio.size());
+                    Log.d("fecha", fechaS);
+                    dinosaurioDelDia = nuevoDinosaurio;
+                }
+                Dinosaurio d = dinoList.get(dinosaurioDelDia);
+                Log.d("HOLA", d.getName());
+                nombre = d.getName();
+
+                if (dinoList.size() != 0) {
+                    final TextView dinoDia = (TextView) vista.findViewById(R.id.nombreDino);
+                    dinoDia.setText(nombre);
+                }
+            }
+        }
+    }
+
+
     @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
-        View rootView = inflater.inflate(R.layout.fragment_main, container, false);
-        return rootView;
+    public void onResume() {
+        super.onResume();
+        if(dinoList.size()!=0){
+            elegirDinosaurio();
+        }
     }
+
+
 }
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/EnciclopediaFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.dinopedia;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport com.google.android.material.snackbar.Snackbar;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport es.unex.dinopedia.roomdb.DinosaurioDatabase;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link EnciclopediaFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class EnciclopediaFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    private Context context;\r\n\r\n\r\n    public EnciclopediaFragment(){\r\n    }\r\n\r\n    public EnciclopediaFragment(Context cont) {\r\n        // Required empty public constructor\r\n        context = cont;\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment EnciclopediaFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static EnciclopediaFragment newInstance(String param1, String param2, Context context, List<Dinosaurio> dino) {\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        return null;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/EnciclopediaFragment.java b/app/src/main/java/es/unex/dinopedia/EnciclopediaFragment.java
--- a/app/src/main/java/es/unex/dinopedia/EnciclopediaFragment.java	
+++ b/app/src/main/java/es/unex/dinopedia/EnciclopediaFragment.java	
@@ -1,26 +1,11 @@
 package es.unex.dinopedia;
 
 import android.content.Context;
-import android.os.Bundle;
 
-import androidx.appcompat.widget.Toolbar;
 import androidx.fragment.app.Fragment;
-import androidx.recyclerview.widget.LinearLayoutManager;
-import androidx.recyclerview.widget.RecyclerView;
-
-import android.util.Log;
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
 
-import com.google.android.material.snackbar.Snackbar;
+//import es.unex.dinopedia.database.DinosaurioCRUD;
 
-import org.json.JSONObject;
-
-import java.util.ArrayList;
-import java.util.List;
-
-import es.unex.dinopedia.roomdb.DinosaurioDatabase;
 
 /**
  * A simple {@link Fragment} subclass.
@@ -40,47 +25,13 @@
 
     private Context context;
 
-
     public EnciclopediaFragment(){
     }
 
     public EnciclopediaFragment(Context cont) {
         // Required empty public constructor
         context = cont;
-    }
 
-    /**
-     * Use this factory method to create a new instance of
-     * this fragment using the provided parameters.
-     *
-     * @param param1 Parameter 1.
-     * @param param2 Parameter 2.
-     * @return A new instance of fragment EnciclopediaFragment.
-     */
-    // TODO: Rename and change types and number of parameters
-    public static EnciclopediaFragment newInstance(String param1, String param2, Context context, List<Dinosaurio> dino) {
-        Bundle args = new Bundle();
-        args.putString(ARG_PARAM1, param1);
-        args.putString(ARG_PARAM2, param2);
-        return null;
     }
 
-    @Override
-    public void onCreate(Bundle savedInstanceState) {
-        super.onCreate(savedInstanceState);
-        if (getArguments() != null) {
-            mParam1 = getArguments().getString(ARG_PARAM1);
-            mParam2 = getArguments().getString(ARG_PARAM2);
-        }
-
-    }
-
-    @Override
-    public View onCreateView(LayoutInflater inflater, ViewGroup container,
-                             Bundle savedInstanceState) {
-
-        return null;
-    }
-
-
 }
\ No newline at end of file
Index: app/src/main/res/raw/logros.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[\r\n  {\r\n    \"name\": \"Inicia SesiÃ³n en la aplicaciÃ³n\",\r\n    \"checked\": \"0\"\r\n  },\r\n  {\r\n    \"name\": \"Realiza tu primer combate con la aplicaciÃ³n\",\r\n    \"checked\": \"0\"\r\n  },\r\n  {\r\n    \"name\": \"Marca tu primer dinosaurio favorito\",\r\n    \"checked\": \"0\"\r\n  },\r\n  {\r\n    \"name\": \"Primera victoria de un dinosaurio carnÃ­voro en tu aplicaciÃ³n\",\r\n    \"checked\": \"0\"\r\n  },\r\n  {\r\n    \"name\": \"Primera victoria de un dinosaurio herbÃ­voro en tu aplicaciÃ³n\",\r\n    \"checked\": \"0\"\r\n  },\r\n  {\r\n    \"name\": \"Primera victoria de un dinosaurio omnÃ­voro en tu aplicaciÃ³n\",\r\n    \"checked\": \"0\"\r\n  },\r\n  {\r\n    \"name\": \"Primera victoria de un dinosaurio del jurÃ¡sico en tu aplicaciÃ³n\",\r\n    \"checked\": \"0\"\r\n  },\r\n  {\r\n    \"name\": \"Primera victoria de un dinosaurio del cretÃ¡cico en tu aplicaciÃ³n\",\r\n    \"checked\": \"0\"\r\n  },\r\n  {\r\n    \"name\": \"Primera victoria de un dinosaurio del triÃ¡sico en tu aplicaciÃ³n\",\r\n    \"checked\": \"0\"\r\n  }\r\n]
===================================================================
diff --git a/app/src/main/res/raw/logros.json b/app/src/main/res/raw/logros.json
--- a/app/src/main/res/raw/logros.json	
+++ b/app/src/main/res/raw/logros.json	
@@ -1,38 +1,38 @@
 [
   {
     "name": "Inicia SesiÃ³n en la aplicaciÃ³n",
-    "checked": "0"
+    "check": "false"
   },
   {
     "name": "Realiza tu primer combate con la aplicaciÃ³n",
-    "checked": "0"
+    "check": "false"
   },
   {
     "name": "Marca tu primer dinosaurio favorito",
-    "checked": "0"
+    "check": "false"
   },
   {
     "name": "Primera victoria de un dinosaurio carnÃ­voro en tu aplicaciÃ³n",
-    "checked": "0"
+    "check": "false"
   },
   {
     "name": "Primera victoria de un dinosaurio herbÃ­voro en tu aplicaciÃ³n",
-    "checked": "0"
+    "check": "false"
   },
   {
     "name": "Primera victoria de un dinosaurio omnÃ­voro en tu aplicaciÃ³n",
-    "checked": "0"
+    "check": "false"
   },
   {
     "name": "Primera victoria de un dinosaurio del jurÃ¡sico en tu aplicaciÃ³n",
-    "checked": "0"
+    "check": "false"
   },
   {
     "name": "Primera victoria de un dinosaurio del cretÃ¡cico en tu aplicaciÃ³n",
-    "checked": "0"
+    "check": "false"
   },
   {
     "name": "Primera victoria de un dinosaurio del triÃ¡sico en tu aplicaciÃ³n",
-    "checked": "0"
+    "check": "false"
   }
 ]
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/Dinosaurio.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.dinopedia;\r\n\r\nimport androidx.room.Entity;\r\nimport androidx.room.Ignore;\r\nimport androidx.room.PrimaryKey;\r\n\r\nimport com.google.gson.annotations.Expose;\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\nimport java.util.Objects;\r\n\r\n@Entity(tableName = \"Dinosaurio\")\r\npublic class Dinosaurio {\r\n\r\n\t@Ignore\r\n\tpublic static final String ITEM_SEP = System.getProperty(\"line.separator\");\r\n\r\n\t@SerializedName(\"id\")\r\n\t@Expose\r\n\t@PrimaryKey(autoGenerate = true)\r\n\tprivate long id;\r\n\t@SerializedName(\"name\")\r\n\t@Expose\r\n\tprivate String name;\r\n\t@SerializedName(\"diet\")\r\n\t@Expose\r\n\tprivate String diet;\r\n\t@SerializedName(\"lived_in\")\r\n\t@Expose\r\n\tprivate String livedIn;\r\n\t@SerializedName(\"type\")\r\n\t@Expose\r\n\tprivate String type;\r\n\t@SerializedName(\"species\")\r\n\t@Expose\r\n\tprivate String species;\r\n\t@SerializedName(\"period_name\")\r\n\t@Expose\r\n\tprivate String periodName;\r\n\t@SerializedName(\"length_meters\")\r\n\t@Expose\r\n\tprivate String lengthMeters;\r\n\t@SerializedName(\"favorite\")\r\n\t@Expose\r\n\tprivate String favorite;\r\n\r\n\t/**\r\n\t * No args constructor for use in serialization\r\n\t *\r\n\t */\r\n\t@Ignore\r\n\tpublic Dinosaurio() {\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param livedIn\r\n\t * @param species\r\n\t * @param name\r\n\t * @param periodName\r\n\t * @param diet\r\n\t * @param type\r\n\t * @param lengthMeters\r\n\t * @param favorite\r\n\t */\r\n\t@Ignore\r\n\tpublic Dinosaurio(String name, String diet, String livedIn, String type, String species, String periodName, String lengthMeters, String favorite) {\r\n\t\tsuper();\r\n\t\tthis.name = name;\r\n\t\tthis.diet = diet;\r\n\t\tthis.livedIn = livedIn;\r\n\t\tthis.type = type;\r\n\t\tthis.species = species;\r\n\t\tthis.periodName = periodName;\r\n\t\tthis.lengthMeters = lengthMeters;\r\n\t\tthis.favorite = favorite;\r\n\t}\r\n\r\n\tpublic Dinosaurio(long id, String name, String diet, String livedIn, String type, String species, String periodName, String lengthMeters, String favorite) {\r\n\t\tsuper();\r\n\t\tthis.id = id;\r\n\t\tthis.name = name;\r\n\t\tthis.diet = diet;\r\n\t\tthis.livedIn = livedIn;\r\n\t\tthis.type = type;\r\n\t\tthis.species = species;\r\n\t\tthis.periodName = periodName;\r\n\t\tthis.lengthMeters = lengthMeters;\r\n\t\tthis.favorite = favorite;\r\n\t}\r\n\r\n\tpublic long getId() {\r\n\t\treturn id;\r\n\t}\r\n\r\n\tpublic void setId(long id) {\r\n\t\tthis.id = id;\r\n\t}\r\n\r\n\tpublic String getName() {\r\n\t\treturn name;\r\n\t}\r\n\r\n\tpublic void setName(String name) {\r\n\t\tthis.name = name;\r\n\t}\r\n\r\n\tpublic String getDiet() {\r\n\t\treturn diet;\r\n\t}\r\n\r\n\tpublic void setDiet(String diet) {\r\n\t\tthis.diet = diet;\r\n\t}\r\n\r\n\tpublic String getLivedIn() {\r\n\t\treturn livedIn;\r\n\t}\r\n\r\n\tpublic void setLivedIn(String livedIn) {\r\n\t\tthis.livedIn = livedIn;\r\n\t}\r\n\r\n\tpublic String getType() {\r\n\t\treturn type;\r\n\t}\r\n\r\n\tpublic void setType(String type) {\r\n\t\tthis.type = type;\r\n\t}\r\n\r\n\tpublic String getSpecies() {\r\n\t\treturn species;\r\n\t}\r\n\r\n\tpublic void setSpecies(String species) {\r\n\t\tthis.species = species;\r\n\t}\r\n\r\n\tpublic String getPeriodName() {\r\n\t\treturn periodName;\r\n\t}\r\n\r\n\tpublic void setPeriodName(String periodName) {\r\n\t\tthis.periodName = periodName;\r\n\t}\r\n\r\n\tpublic String getLengthMeters() {\r\n\t\treturn lengthMeters;\r\n\t}\r\n\r\n\tpublic void setLengthMeters(String lengthMeters) {\r\n\t\tthis.lengthMeters = lengthMeters;\r\n\t}\r\n\r\n\tpublic String getFavorite() { return favorite;\t}\r\n\r\n\tpublic void setFavorite(String favorite) { this.favorite = favorite; }\r\n\r\n\t@Override\r\n\tpublic String toString() {\r\n\t\treturn \"Dinosaurio{\" +\r\n\t\t\t\t\"id=\" + id +\r\n\t\t\t\t\", name='\" + name + '\\'' +\r\n\t\t\t\t\", diet='\" + diet + '\\'' +\r\n\t\t\t\t\", livedIn='\" + livedIn + '\\'' +\r\n\t\t\t\t\", type='\" + type + '\\'' +\r\n\t\t\t\t\", species='\" + species + '\\'' +\r\n\t\t\t\t\", periodName='\" + periodName + '\\'' +\r\n\t\t\t\t\", lengthMeters='\" + lengthMeters + '\\'' +\r\n\t\t\t\t\", favorite='\" + favorite + '\\'' +\r\n\t\t\t\t'}';\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean equals(Object o) {\r\n\t\tif (this == o) return true;\r\n\t\tif (o == null || getClass() != o.getClass()) return false;\r\n\t\tDinosaurio that = (Dinosaurio) o;\r\n\t\treturn id == that.id && Objects.equals(name, that.name) && Objects.equals(diet, that.diet) && Objects.equals(livedIn, that.livedIn) && Objects.equals(type, that.type) && Objects.equals(species, that.species) && Objects.equals(periodName, that.periodName) && Objects.equals(lengthMeters, that.lengthMeters) && Objects.equals(favorite, that.favorite);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic int hashCode() {\r\n\t\treturn Objects.hash(id, name, diet, livedIn, type, species, periodName, lengthMeters, favorite);\r\n\t}\r\n\r\n\tpublic String toLog() {\r\n\t\treturn \"ID: \" + id + ITEM_SEP + \"Name:\" + name + ITEM_SEP + \"Diet:\" + diet\r\n\t\t\t\t+ ITEM_SEP + \"Live in:\" + livedIn + ITEM_SEP + \"Type:\"\r\n\t\t\t\t+ type + ITEM_SEP + \"Species:\" + species + ITEM_SEP + \"Period:\" + periodName\r\n\t\t\t\t+ ITEM_SEP + \"LengthMeters:\" + lengthMeters + ITEM_SEP + \"Favorite:\" + favorite;\r\n\t}\r\n}
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/Dinosaurio.java b/app/src/main/java/es/unex/dinopedia/Dinosaurio.java
--- a/app/src/main/java/es/unex/dinopedia/Dinosaurio.java	
+++ b/app/src/main/java/es/unex/dinopedia/Dinosaurio.java	
@@ -191,4 +191,5 @@
 				+ type + ITEM_SEP + "Species:" + species + ITEM_SEP + "Period:" + periodName
 				+ ITEM_SEP + "LengthMeters:" + lengthMeters + ITEM_SEP + "Favorite:" + favorite;
 	}
+
 }
\ No newline at end of file
Index: app/src/main/java/es/unex/dinopedia/roomdb/DinosaurioDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.dinopedia.roomdb;\r\n\r\nimport androidx.room.Dao;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\nimport androidx.room.Update;\r\n\r\nimport java.util.List;\r\n\r\nimport es.unex.dinopedia.Dinosaurio;\r\n\r\n@Dao\r\npublic interface DinosaurioDao {\r\n\r\n    @Query(\"SELECT * FROM Dinosaurio\")\r\n    List<Dinosaurio> getAll();\r\n\r\n    @Query(\"SELECT * FROM Dinosaurio WHERE id=:ID\")\r\n    Dinosaurio getDinosaurioId(long ID);\r\n\r\n    @Insert\r\n    long insert(Dinosaurio item);\r\n\r\n    @Query(\"DELETE FROM Dinosaurio\")\r\n    void deleteAll();\r\n\r\n    @Update\r\n    int update(Dinosaurio item);\r\n\r\n    @Query(\"SELECT COUNT (id) FROM Dinosaurio\")\r\n    int count();\r\n\r\n    @Query(\"SELECT * FROM Dinosaurio WHERE favorite='1'\")\r\n    List<Dinosaurio> getFavorito();\r\n\r\n    @Query(\"UPDATE Dinosaurio SET favorite='0'\")\r\n    void quitarFavorite();\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/roomdb/DinosaurioDao.java b/app/src/main/java/es/unex/dinopedia/roomdb/DinosaurioDao.java
--- a/app/src/main/java/es/unex/dinopedia/roomdb/DinosaurioDao.java	
+++ b/app/src/main/java/es/unex/dinopedia/roomdb/DinosaurioDao.java	
@@ -15,9 +15,18 @@
     @Query("SELECT * FROM Dinosaurio")
     List<Dinosaurio> getAll();
 
+    @Query("SELECT name FROM Dinosaurio")
+    List<String> getNombres();
+
+    @Query("SELECT * FROM Dinosaurio WHERE diet=:opcion OR periodName=:opcion")
+    List<Dinosaurio> getOpciones(String opcion);
+
     @Query("SELECT * FROM Dinosaurio WHERE id=:ID")
     Dinosaurio getDinosaurioId(long ID);
 
+    @Query("SELECT * FROM Dinosaurio WHERE name=:nombre")
+    Dinosaurio getDinosaurioString(String nombre);
+
     @Insert
     long insert(Dinosaurio item);
 
Index: app/src/main/java/es/unex/dinopedia/DinosaurioAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.dinopedia;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class DinosaurioAdapter extends RecyclerView.Adapter<DinosaurioAdapter.ViewHolder> {\r\n    private List<Dinosaurio> mItems = new ArrayList<Dinosaurio>();\r\n    Context mContext;\r\n\r\n    public interface OnItemClickListener {\r\n        void onItemClick(Dinosaurio item);     //Type of the element to be returned\r\n    }\r\n\r\n    private final OnItemClickListener listener;\r\n\r\n    // Provide a suitable constructor (depends on the kind of dataset)\r\n    public DinosaurioAdapter(Context context, OnItemClickListener listener) {\r\n        mContext = context;\r\n        this.listener = listener;\r\n    }\r\n\r\n    // Create new views (invoked by the layout manager)\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(ViewGroup parent,\r\n                                                           int viewType) {\r\n        // - Inflate the View for every element\r\n        View v = LayoutInflater.from(parent.getContext())\r\n                .inflate(R.layout.dinosaurio_info, parent, false);\r\n\r\n        return new ViewHolder(mContext,v);\r\n    }\r\n\r\n    // Replace the contents of a view (invoked by the layout manager)\r\n    @Override\r\n    public void onBindViewHolder(ViewHolder holder, int position) {\r\n        holder.bind(mItems.get(position),listener);\r\n    }\r\n\r\n    // Return the size of your dataset (invoked by the layout manager)\r\n    @Override\r\n    public int getItemCount() {\r\n\r\n        return mItems.size();\r\n    }\r\n\r\n    public void add(Dinosaurio item) {\r\n\r\n        mItems.add(item);\r\n        notifyDataSetChanged();\r\n\r\n    }\r\n\r\n    public void clear(){\r\n\r\n        mItems.clear();\r\n        notifyDataSetChanged();\r\n\r\n    }\r\n\r\n    public void load(List<Dinosaurio> items){\r\n\r\n        mItems.clear();\r\n        mItems = items;\r\n        notifyDataSetChanged();\r\n\r\n    }\r\n\r\n    public Object getItem(int pos) {\r\n        return mItems.get(pos);\r\n    }\r\n\r\n     static class ViewHolder extends RecyclerView.ViewHolder {\r\n\r\n         private final Context mContext;\r\n\r\n        private final TextView nombre;\r\n\r\n        public ViewHolder(Context context, View itemView) {\r\n            super(itemView);\r\n\r\n            mContext = context;\r\n\r\n            // - Get the references to every widget of the Item View\r\n\r\n            nombre =  itemView.findViewById(R.id.nombreD);\r\n        }\r\n\r\n        public void bind(final Dinosaurio dinosaurio, final OnItemClickListener listener) {\r\n\r\n            // - Display Nombre in TextView\r\n            nombre.setText(dinosaurio.getName());\r\n\r\n            itemView.setOnClickListener(new View.OnClickListener() {\r\n\r\n                @Override\r\n                public void onClick(View v) {\r\n                    listener.onItemClick(dinosaurio);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/DinosaurioAdapter.java b/app/src/main/java/es/unex/dinopedia/DinosaurioAdapter.java
--- a/app/src/main/java/es/unex/dinopedia/DinosaurioAdapter.java	
+++ b/app/src/main/java/es/unex/dinopedia/DinosaurioAdapter.java	
@@ -107,4 +107,5 @@
             });
         }
     }
+
 }
Index: app/src/main/res/drawable/ic_baseline_favorite_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector android:height=\"24dp\" android:tint=\"#5CD056\"\r\n    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\r\n    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M12,21.35l-1.45,-1.32C5.4,15.36 2,12.28 2,8.5 2,5.42 4.42,3 7.5,3c1.74,0 3.41,0.81 4.5,2.09C13.09,3.81 14.76,3 16.5,3 19.58,3 22,5.42 22,8.5c0,3.78 -3.4,6.86 -8.55,11.54L12,21.35z\"/>\r\n</vector>\r\n
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_favorite_24.xml b/app/src/main/res/drawable/ic_baseline_favorite_24.xml
--- a/app/src/main/res/drawable/ic_baseline_favorite_24.xml	
+++ b/app/src/main/res/drawable/ic_baseline_favorite_24.xml	
@@ -1,4 +1,4 @@
-<vector android:height="24dp" android:tint="#5CD056"
+<vector android:height="24dp" android:tint="#9556d0"
     android:viewportHeight="24" android:viewportWidth="24"
     android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
     <path android:fillColor="@android:color/white" android:pathData="M12,21.35l-1.45,-1.32C5.4,15.36 2,12.28 2,8.5 2,5.42 4.42,3 7.5,3c1.74,0 3.41,0.81 4.5,2.09C13.09,3.81 14.76,3 16.5,3 19.58,3 22,5.42 22,8.5c0,3.78 -3.4,6.86 -8.55,11.54L12,21.35z"/>
Index: app/src/main/res/drawable/ic_baseline_emoji_events_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector android:height=\"24dp\" android:tint=\"#5CD056\"\r\n    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\r\n    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M19,5h-2V3H7v2H5C3.9,5 3,5.9 3,7v1c0,2.55 1.92,4.63 4.39,4.94c0.63,1.5 1.98,2.63 3.61,2.96V19H7v2h10v-2h-4v-3.1c1.63,-0.33 2.98,-1.46 3.61,-2.96C19.08,12.63 21,10.55 21,8V7C21,5.9 20.1,5 19,5zM5,8V7h2v3.82C5.84,10.4 5,9.3 5,8zM19,8c0,1.3 -0.84,2.4 -2,2.82V7h2V8z\"/>\r\n</vector>\r\n
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_emoji_events_24.xml b/app/src/main/res/drawable/ic_baseline_emoji_events_24.xml
--- a/app/src/main/res/drawable/ic_baseline_emoji_events_24.xml	
+++ b/app/src/main/res/drawable/ic_baseline_emoji_events_24.xml	
@@ -1,4 +1,4 @@
-<vector android:height="24dp" android:tint="#5CD056"
+<vector android:height="24dp" android:tint="#9556d0"
     android:viewportHeight="24" android:viewportWidth="24"
     android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
     <path android:fillColor="@android:color/white" android:pathData="M19,5h-2V3H7v2H5C3.9,5 3,5.9 3,7v1c0,2.55 1.92,4.63 4.39,4.94c0.63,1.5 1.98,2.63 3.61,2.96V19H7v2h10v-2h-4v-3.1c1.63,-0.33 2.98,-1.46 3.61,-2.96C19.08,12.63 21,10.55 21,8V7C21,5.9 20.1,5 19,5zM5,8V7h2v3.82C5.84,10.4 5,9.3 5,8zM19,8c0,1.3 -0.84,2.4 -2,2.82V7h2V8z"/>
Index: app/src/main/res/drawable/ic_baseline_fort_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector android:height=\"24dp\" android:tint=\"#5CD056\"\r\n    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\r\n    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M21,3v2h-2V3h-2v2h-2V3h-2v4l2,2v1H9V9l2,-2V3H9v2H7V3H5v2H3V3H1v4l2,2v6l-2,2v4h9v-3c0,-1.1 0.9,-2 2,-2s2,0.9 2,2v3h9v-4l-2,-2V9l2,-2V3H21z\"/>\r\n</vector>\r\n
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_fort_24.xml b/app/src/main/res/drawable/ic_baseline_fort_24.xml
--- a/app/src/main/res/drawable/ic_baseline_fort_24.xml	
+++ b/app/src/main/res/drawable/ic_baseline_fort_24.xml	
@@ -1,4 +1,4 @@
-<vector android:height="24dp" android:tint="#5CD056"
+<vector android:height="24dp" android:tint="#9556d0"
     android:viewportHeight="24" android:viewportWidth="24"
     android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
     <path android:fillColor="@android:color/white" android:pathData="M21,3v2h-2V3h-2v2h-2V3h-2v4l2,2v1H9V9l2,-2V3H9v2H7V3H5v2H3V3H1v4l2,2v6l-2,2v4h9v-3c0,-1.1 0.9,-2 2,-2s2,0.9 2,2v3h9v-4l-2,-2V9l2,-2V3H21z"/>
Index: app/src/main/res/layout/fragment_favorito.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/textView2\"\r\n        android:layout_width=\"49dp\"\r\n        android:layout_height=\"16dp\"\r\n        android:text=\"Favorito\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>
===================================================================
diff --git a/app/src/main/res/layout/fragment_favorito.xml b/app/src/main/res/layout/fragment_favorito.xml
--- a/app/src/main/res/layout/fragment_favorito.xml	
+++ b/app/src/main/res/layout/fragment_favorito.xml	
@@ -1,17 +1,16 @@
 <?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="match_parent"
+    tools:context=".EnciclopediaFragment">
+
+    <!-- TODO: Update blank fragment layout -->
 
-    <TextView
-        android:id="@+id/textView2"
-        android:layout_width="49dp"
-        android:layout_height="16dp"
-        android:text="Favorito"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/my_recycler_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:scrollbars="vertical" />
+
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_combate.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".CombateFragment\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:text=\"BELEN\" />\r\n\r\n</FrameLayout>
===================================================================
diff --git a/app/src/main/res/layout/fragment_combate.xml b/app/src/main/res/layout/fragment_combate.xml
--- a/app/src/main/res/layout/fragment_combate.xml	
+++ b/app/src/main/res/layout/fragment_combate.xml	
@@ -1,14 +1,60 @@
 <?xml version="1.0" encoding="utf-8"?>
 <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/bCombatir"
     android:layout_width="match_parent"
     android:layout_height="match_parent"
     tools:context=".CombateFragment">
 
     <!-- TODO: Update blank fragment layout -->
+
+    <Spinner
+        android:id="@+id/mSpinnerdino1"
+        android:layout_width="175dp"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="25dp"
+        android:layout_marginTop="440dp"
+        android:contentDescription="@string/app_name"
+        android:minHeight="48dp" />
+
+    <Spinner
+        android:id="@+id/mSpinnerdino2"
+        android:layout_width="175dp"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="225dp"
+        android:layout_marginTop="440dp"
+        android:contentDescription="@string/app_name"
+        android:minHeight="48dp" />
+
+    <TextView
+        android:id="@+id/textDino1"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="25dp"
+        android:layout_marginTop="405dp"
+        android:text="Dino 1:" />
+
     <TextView
+        android:id="@+id/textDino2"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:layout_marginLeft="225dp"
+        android:layout_marginTop="405dp"
+        android:text="Dino 2:" />
+
+    <Button
+        android:id="@+id/bCombate"
+        android:layout_width="150dp"
+        android:layout_height="60dp"
+        android:layout_marginLeft="130dp"
+        android:layout_marginTop="520dp"
+        android:text="COMBATIR" />
+
+    <ImageView
+        android:id="@+id/imageView7"
         android:layout_width="match_parent"
-        android:layout_height="match_parent"
-        android:text="BELEN" />
+        android:layout_height="429dp"
+        android:src="@drawable/combatedino" />
 
 </FrameLayout>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_baseline_house_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector android:height=\"24dp\" android:tint=\"#5CD056\"\r\n    android:viewportHeight=\"24\" android:viewportWidth=\"24\"\r\n    android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M19,9.3V4h-3v2.6L12,3L2,12h3v8h5v-6h4v6h5v-8h3L19,9.3zM10,10c0,-1.1 0.9,-2 2,-2s2,0.9 2,2H10z\"/>\r\n</vector>\r\n
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_house_24.xml b/app/src/main/res/drawable/ic_baseline_house_24.xml
--- a/app/src/main/res/drawable/ic_baseline_house_24.xml	
+++ b/app/src/main/res/drawable/ic_baseline_house_24.xml	
@@ -1,4 +1,4 @@
-<vector android:height="24dp" android:tint="#5CD056"
+<vector android:height="24dp" android:tint="#9556d0"
     android:viewportHeight="24" android:viewportWidth="24"
     android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
     <path android:fillColor="@android:color/white" android:pathData="M19,9.3V4h-3v2.6L12,3L2,12h3v8h5v-6h4v6h5v-8h3L19,9.3zM10,10c0,-1.1 0.9,-2 2,-2s2,0.9 2,2H10z"/>
Index: app/src/main/java/es/unex/dinopedia/FavoritoFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.dinopedia;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link FavoritoFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class FavoritoFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    private static  Context context = null;\r\n\r\n    public FavoritoFragment(Context cont) {\r\n        // Required empty public constructor\r\n        context = cont;\r\n\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment FavoritoFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static FavoritoFragment newInstance(String param1, String param2) {\r\n        FavoritoFragment fragment = new FavoritoFragment(context);\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        return null;\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/FavoritoFragment.java b/app/src/main/java/es/unex/dinopedia/FavoritoFragment.java
--- a/app/src/main/java/es/unex/dinopedia/FavoritoFragment.java	
+++ b/app/src/main/java/es/unex/dinopedia/FavoritoFragment.java	
@@ -4,11 +4,18 @@
 import android.os.Bundle;
 
 import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
 
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 
+import java.util.ArrayList;
+import java.util.List;
+
+import es.unex.dinopedia.roomdb.DinosaurioDatabase;
+
 /**
  * A simple {@link Fragment} subclass.
  * Use the {@link FavoritoFragment#newInstance} factory method to
@@ -25,12 +32,22 @@
     private String mParam1;
     private String mParam2;
 
-    private static  Context context = null;
+    private RecyclerView mRecyclerView;
+    private RecyclerView.LayoutManager mLayoutManager;
+    private DinosaurioAdapter mAdapter;
+    private final Context context;
+    private List<Dinosaurio> dinoList;
 
     public FavoritoFragment(Context cont) {
         // Required empty public constructor
         context = cont;
-
+        mAdapter = new DinosaurioAdapter(context, new DinosaurioAdapter.OnItemClickListener() {
+            @Override public void onItemClick(Dinosaurio item) {
+                //Snackbar.make(view, "Item "+item.getName()+" Clicked", Snackbar.LENGTH_LONG).show();
+            }
+        });
+        dinoList = new ArrayList<>();
+        cargarDinosaurios();
     }
 
     /**
@@ -42,7 +59,7 @@
      * @return A new instance of fragment FavoritoFragment.
      */
     // TODO: Rename and change types and number of parameters
-    public static FavoritoFragment newInstance(String param1, String param2) {
+    public static FavoritoFragment newInstance(String param1, String param2, Context context) {
         FavoritoFragment fragment = new FavoritoFragment(context);
         Bundle args = new Bundle();
         args.putString(ARG_PARAM1, param1);
@@ -63,6 +80,49 @@
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
-        return null;
+        // Inflate the layout for this fragment
+        View viewMain = inflater.inflate(R.layout.fragment_favorito, container, false);
+
+        mRecyclerView = viewMain.findViewById(R.id.my_recycler_view);
+
+        // use this setting to improve performance if you know that changes
+        // in content do not change the layout size of the RecyclerView
+        mRecyclerView.setHasFixedSize(true);
+
+        // use a linear layout manager
+        // - Set a Linear Layout Manager to the RecyclerView
+        mLayoutManager = new LinearLayoutManager(context);
+        mRecyclerView.setLayoutManager(mLayoutManager);
+
+        mAdapter = new DinosaurioAdapter(context, new DinosaurioAdapter.OnItemClickListener() {
+            @Override public void onItemClick(Dinosaurio item) {
+                //Snackbar.make(view, "Item "+item.getName()+" Clicked", Snackbar.LENGTH_LONG).show();
+                MainActivityInterface activity = (MainActivityInterface) FavoritoFragment.this.getActivity();
+                activity.classDinosaurio(item);
+            }
+        });
+
+        // - Attach the adapter to the RecyclerView
+        mRecyclerView.setAdapter(mAdapter);
+
+        return viewMain;
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        cargarDinosaurios();
+        mAdapter.load(dinoList);
+    }
+
+
+    public void cargarDinosaurios(){
+        AppExecutors.getInstance().diskIO().execute(new Runnable() {
+            @Override
+            public void run() {
+                DinosaurioDatabase database = DinosaurioDatabase.getInstance(context);
+                dinoList = database.getDao().getFavorito();
+            }
+        });
     }
 }
\ No newline at end of file
Index: app/src/main/res/drawable/ic_baseline_menu_book_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><vector android:autoMirrored=\"true\" android:height=\"24dp\"\r\n    android:tint=\"#5CD056\" android:viewportHeight=\"24\"\r\n    android:viewportWidth=\"24\" android:width=\"24dp\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M21,5c-1.11,-0.35 -2.33,-0.5 -3.5,-0.5c-1.95,0 -4.05,0.4 -5.5,1.5c-1.45,-1.1 -3.55,-1.5 -5.5,-1.5S2.45,4.9 1,6v14.65c0,0.25 0.25,0.5 0.5,0.5c0.1,0 0.15,-0.05 0.25,-0.05C3.1,20.45 5.05,20 6.5,20c1.95,0 4.05,0.4 5.5,1.5c1.35,-0.85 3.8,-1.5 5.5,-1.5c1.65,0 3.35,0.3 4.75,1.05c0.1,0.05 0.15,0.05 0.25,0.05c0.25,0 0.5,-0.25 0.5,-0.5V6C22.4,5.55 21.75,5.25 21,5zM21,18.5c-1.1,-0.35 -2.3,-0.5 -3.5,-0.5c-1.7,0 -4.15,0.65 -5.5,1.5V8c1.35,-0.85 3.8,-1.5 5.5,-1.5c1.2,0 2.4,0.15 3.5,0.5V18.5z\"/>\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M17.5,10.5c0.88,0 1.73,0.09 2.5,0.26V9.24C19.21,9.09 18.36,9 17.5,9c-1.7,0 -3.24,0.29 -4.5,0.83v1.66C14.13,10.85 15.7,10.5 17.5,10.5z\"/>\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M13,12.49v1.66c1.13,-0.64 2.7,-0.99 4.5,-0.99c0.88,0 1.73,0.09 2.5,0.26V11.9c-0.79,-0.15 -1.64,-0.24 -2.5,-0.24C15.8,11.66 14.26,11.96 13,12.49z\"/>\r\n    <path android:fillColor=\"@android:color/white\" android:pathData=\"M17.5,14.33c-1.7,0 -3.24,0.29 -4.5,0.83v1.66c1.13,-0.64 2.7,-0.99 4.5,-0.99c0.88,0 1.73,0.09 2.5,0.26v-1.52C19.21,14.41 18.36,14.33 17.5,14.33z\"/>\r\n</vector>\r\n
===================================================================
diff --git a/app/src/main/res/drawable/ic_baseline_menu_book_24.xml b/app/src/main/res/drawable/ic_baseline_menu_book_24.xml
--- a/app/src/main/res/drawable/ic_baseline_menu_book_24.xml	
+++ b/app/src/main/res/drawable/ic_baseline_menu_book_24.xml	
@@ -1,5 +1,5 @@
 <vector android:autoMirrored="true" android:height="24dp"
-    android:tint="#5CD056" android:viewportHeight="24"
+    android:tint="#9556d0" android:viewportHeight="24"
     android:viewportWidth="24" android:width="24dp" xmlns:android="http://schemas.android.com/apk/res/android">
     <path android:fillColor="@android:color/white" android:pathData="M21,5c-1.11,-0.35 -2.33,-0.5 -3.5,-0.5c-1.95,0 -4.05,0.4 -5.5,1.5c-1.45,-1.1 -3.55,-1.5 -5.5,-1.5S2.45,4.9 1,6v14.65c0,0.25 0.25,0.5 0.5,0.5c0.1,0 0.15,-0.05 0.25,-0.05C3.1,20.45 5.05,20 6.5,20c1.95,0 4.05,0.4 5.5,1.5c1.35,-0.85 3.8,-1.5 5.5,-1.5c1.65,0 3.35,0.3 4.75,1.05c0.1,0.05 0.15,0.05 0.25,0.05c0.25,0 0.5,-0.25 0.5,-0.5V6C22.4,5.55 21.75,5.25 21,5zM21,18.5c-1.1,-0.35 -2.3,-0.5 -3.5,-0.5c-1.7,0 -4.15,0.65 -5.5,1.5V8c1.35,-0.85 3.8,-1.5 5.5,-1.5c1.2,0 2.4,0.15 3.5,0.5V18.5z"/>
     <path android:fillColor="@android:color/white" android:pathData="M17.5,10.5c0.88,0 1.73,0.09 2.5,0.26V9.24C19.21,9.09 18.36,9 17.5,9c-1.7,0 -3.24,0.29 -4.5,0.83v1.66C14.13,10.85 15.7,10.5 17.5,10.5z"/>
Index: app/src/main/java/es/unex/dinopedia/CombateFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.dinopedia;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link CombateFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class CombateFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public CombateFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment CombateFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static CombateFragment newInstance(String param1, String param2) {\r\n        CombateFragment fragment = new CombateFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        return null;\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/CombateFragment.java b/app/src/main/java/es/unex/dinopedia/CombateFragment.java
--- a/app/src/main/java/es/unex/dinopedia/CombateFragment.java	
+++ b/app/src/main/java/es/unex/dinopedia/CombateFragment.java	
@@ -1,12 +1,23 @@
 package es.unex.dinopedia;
 
+import android.content.Context;
+import android.content.Intent;
 import android.os.Bundle;
 
 import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.RecyclerView;
 
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.Spinner;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import es.unex.dinopedia.roomdb.DinosaurioDatabase;
 
 /**
  * A simple {@link Fragment} subclass.
@@ -24,41 +35,113 @@
     private String mParam1;
     private String mParam2;
 
-    public CombateFragment() {
+    private RecyclerView mRecyclerView;
+    private RecyclerView.LayoutManager mLayoutManager;
+    private static DinosaurioAdapter mAdapter;
+    private Spinner mSpinnerdino1;
+    private Spinner mSpinnerdino2;
+    private List<String> dinoListNombres = new ArrayList<>();
+    private static Context context;
+    private ArrayAdapter adp;
+    private Dinosaurio dinosaurio1;
+    private Dinosaurio dinosaurio2;
+
+    public CombateFragment(Context cont) {
         // Required empty public constructor
+        context = cont;
     }
 
     /**
      * Use this factory method to create a new instance of
      * this fragment using the provided parameters.
      *
-     * @param param1 Parameter 1.
-     * @param param2 Parameter 2.
+
      * @return A new instance of fragment CombateFragment.
      */
     // TODO: Rename and change types and number of parameters
-    public static CombateFragment newInstance(String param1, String param2) {
-        CombateFragment fragment = new CombateFragment();
+    public static CombateFragment newInstance(Context cont) {
+        CombateFragment fragment = new CombateFragment(cont);
         Bundle args = new Bundle();
-        args.putString(ARG_PARAM1, param1);
-        args.putString(ARG_PARAM2, param2);
-        fragment.setArguments(args);
+        context = cont;
         return fragment;
     }
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
-        if (getArguments() != null) {
-            mParam1 = getArguments().getString(ARG_PARAM1);
-            mParam2 = getArguments().getString(ARG_PARAM2);
-        }
+
+
     }
 
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
         // Inflate the layout for this fragment
-        return null;
-    }
-}
\ No newline at end of file
+        View viewMain = inflater.inflate(R.layout.fragment_combate, container, false);
+
+        mSpinnerdino1 = (Spinner) viewMain.findViewById(R.id.mSpinnerdino1);
+        mSpinnerdino2 = (Spinner) viewMain.findViewById(R.id.mSpinnerdino2);
+
+        //adp.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+        AppExecutors.getInstance().diskIO().execute(new Runnable() {
+            @Override
+            public void run() {
+                DinosaurioDatabase database = DinosaurioDatabase.getInstance(context);
+                dinoListNombres=database.getDao().getNombres();
+            }
+        });
+
+        Button bCombate = viewMain.findViewById(R.id.bCombate);
+        bCombate.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                String dino1 = mSpinnerdino1.getSelectedItem().toString();
+                String dino2 = mSpinnerdino2.getSelectedItem().toString();
+                AppExecutors.getInstance().diskIO().execute(new Runnable() {
+                    @Override
+                    public void run() {
+                        DinosaurioDatabase database = DinosaurioDatabase.getInstance(context);
+                        dinosaurio1=database.getDao().getDinosaurioString(dino1);
+                        dinosaurio2=database.getDao().getDinosaurioString(dino2);
+                    }
+                });
+                combatir();
+            }
+        });
+
+
+        return viewMain;
+    }
+
+    public void cargarSpinner(){
+        adp = new ArrayAdapter<String>(context, androidx.appcompat.R.layout.support_simple_spinner_dropdown_item, dinoListNombres);
+        if (adp!= null) {
+            mSpinnerdino1.setAdapter(adp);
+            mSpinnerdino2.setAdapter(adp);
+        }
+    }
+
+    public void combatir(){
+        if(dinosaurio1!=null && dinosaurio2!=null) {
+            Intent intent = new Intent(context, CombateResultActivity.class);
+            if (Integer.parseInt(dinosaurio1.getLengthMeters()) < Integer.parseInt(dinosaurio2.getLengthMeters())) {
+                intent.putExtra("GANADOR", dinosaurio2.getName());
+            }
+            if (Integer.parseInt(dinosaurio1.getLengthMeters()) > Integer.parseInt(dinosaurio2.getLengthMeters())) {
+                intent.putExtra("GANADOR", dinosaurio1.getName());
+            }
+            if (Integer.parseInt(dinosaurio1.getLengthMeters()) == Integer.parseInt(dinosaurio2.getLengthMeters())) {
+                intent.putExtra("EMPATE1", dinosaurio1.getName());
+                intent.putExtra("EMPATE2", dinosaurio2.getName());
+            }
+            startActivity(intent);
+        }
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        cargarSpinner();
+
+    }
+}
Index: app/src/main/java/es/unex/dinopedia/AlbumFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package es.unex.dinopedia;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n * Use the {@link AlbumFragment#newInstance} factory method to\r\n * create an instance of this fragment.\r\n */\r\npublic class AlbumFragment extends Fragment {\r\n\r\n    // TODO: Rename parameter arguments, choose names that match\r\n    // the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\n    private static final String ARG_PARAM1 = \"param1\";\r\n    private static final String ARG_PARAM2 = \"param2\";\r\n\r\n    // TODO: Rename and change types of parameters\r\n    private String mParam1;\r\n    private String mParam2;\r\n\r\n    public AlbumFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    /**\r\n     * Use this factory method to create a new instance of\r\n     * this fragment using the provided parameters.\r\n     *\r\n     * @param param1 Parameter 1.\r\n     * @param param2 Parameter 2.\r\n     * @return A new instance of fragment AlbumFragment.\r\n     */\r\n    // TODO: Rename and change types and number of parameters\r\n    public static AlbumFragment newInstance(String param1, String param2) {\r\n        AlbumFragment fragment = new AlbumFragment();\r\n        Bundle args = new Bundle();\r\n        args.putString(ARG_PARAM1, param1);\r\n        args.putString(ARG_PARAM2, param2);\r\n        fragment.setArguments(args);\r\n        return fragment;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        if (getArguments() != null) {\r\n            mParam1 = getArguments().getString(ARG_PARAM1);\r\n            mParam2 = getArguments().getString(ARG_PARAM2);\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n\r\n        return null;\r\n    }\r\n}
===================================================================
diff --git a/app/src/main/java/es/unex/dinopedia/AlbumFragment.java b/app/src/main/java/es/unex/dinopedia/AlbumFragment.java
--- a/app/src/main/java/es/unex/dinopedia/AlbumFragment.java	
+++ b/app/src/main/java/es/unex/dinopedia/AlbumFragment.java	
@@ -48,7 +48,6 @@
 
     @Override
     public void onCreate(Bundle savedInstanceState) {
-
         super.onCreate(savedInstanceState);
         if (getArguments() != null) {
             mParam1 = getArguments().getString(ARG_PARAM1);
@@ -56,11 +55,10 @@
         }
     }
 
-
     @Override
     public View onCreateView(LayoutInflater inflater, ViewGroup container,
                              Bundle savedInstanceState) {
-
-        return null;
+        // Inflate the layout for this fragment
+        return inflater.inflate(R.layout.fragment_album, container, false);
     }
 }
\ No newline at end of file
